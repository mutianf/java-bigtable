/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v2/bigtable.proto

package com.google.bigtable.v2;

/**
 *
 *
 * <pre>
 * This message represent stats of the tabletservers that the request touched.
 * E.g. CPU utilization.
 * </pre>
 *
 * Protobuf type {@code google.bigtable.v2.ServerStats}
 */
public final class ServerStats extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.bigtable.v2.ServerStats)
    ServerStatsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ServerStats.newBuilder() to construct.
  private ServerStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ServerStats() {
    cpuStats_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ServerStats();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.bigtable.v2.BigtableProto
        .internal_static_google_bigtable_v2_ServerStats_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.bigtable.v2.BigtableProto
        .internal_static_google_bigtable_v2_ServerStats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.bigtable.v2.ServerStats.class,
            com.google.bigtable.v2.ServerStats.Builder.class);
  }

  public interface CPUStatsOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.bigtable.v2.ServerStats.CPUStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * This is the recent CPU utilization for one of the tabletservers that this
     * request touched, in unit of milli-GCU seconds per second. The duration of
     * the measure is determined in the server, which is usually 5 seconds.
     * </pre>
     *
     * <code>int32 recent_gcu_milliseconds_per_second = 1;</code>
     *
     * @return The recentGcuMillisecondsPerSecond.
     */
    int getRecentGcuMillisecondsPerSecond();

    /**
     *
     *
     * <pre>
     * This is the CPU capacity of the tabletserver, measured in milli-GCU. For
     * our regular CBT nodes, it's 8000.
     * </pre>
     *
     * <code>int32 milligcu_limit = 2;</code>
     *
     * @return The milligcuLimit.
     */
    int getMilligcuLimit();
  }
  /**
   *
   *
   * <pre>
   * Contains tabletserver stats, e.g. CPU utilization.
   * </pre>
   *
   * Protobuf type {@code google.bigtable.v2.ServerStats.CPUStats}
   */
  public static final class CPUStats extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.bigtable.v2.ServerStats.CPUStats)
      CPUStatsOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use CPUStats.newBuilder() to construct.
    private CPUStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private CPUStats() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new CPUStats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.bigtable.v2.BigtableProto
          .internal_static_google_bigtable_v2_ServerStats_CPUStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.v2.BigtableProto
          .internal_static_google_bigtable_v2_ServerStats_CPUStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.v2.ServerStats.CPUStats.class,
              com.google.bigtable.v2.ServerStats.CPUStats.Builder.class);
    }

    public static final int RECENT_GCU_MILLISECONDS_PER_SECOND_FIELD_NUMBER = 1;
    private int recentGcuMillisecondsPerSecond_ = 0;
    /**
     *
     *
     * <pre>
     * This is the recent CPU utilization for one of the tabletservers that this
     * request touched, in unit of milli-GCU seconds per second. The duration of
     * the measure is determined in the server, which is usually 5 seconds.
     * </pre>
     *
     * <code>int32 recent_gcu_milliseconds_per_second = 1;</code>
     *
     * @return The recentGcuMillisecondsPerSecond.
     */
    @java.lang.Override
    public int getRecentGcuMillisecondsPerSecond() {
      return recentGcuMillisecondsPerSecond_;
    }

    public static final int MILLIGCU_LIMIT_FIELD_NUMBER = 2;
    private int milligcuLimit_ = 0;
    /**
     *
     *
     * <pre>
     * This is the CPU capacity of the tabletserver, measured in milli-GCU. For
     * our regular CBT nodes, it's 8000.
     * </pre>
     *
     * <code>int32 milligcu_limit = 2;</code>
     *
     * @return The milligcuLimit.
     */
    @java.lang.Override
    public int getMilligcuLimit() {
      return milligcuLimit_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (recentGcuMillisecondsPerSecond_ != 0) {
        output.writeInt32(1, recentGcuMillisecondsPerSecond_);
      }
      if (milligcuLimit_ != 0) {
        output.writeInt32(2, milligcuLimit_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (recentGcuMillisecondsPerSecond_ != 0) {
        size +=
            com.google.protobuf.CodedOutputStream.computeInt32Size(
                1, recentGcuMillisecondsPerSecond_);
      }
      if (milligcuLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, milligcuLimit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.bigtable.v2.ServerStats.CPUStats)) {
        return super.equals(obj);
      }
      com.google.bigtable.v2.ServerStats.CPUStats other =
          (com.google.bigtable.v2.ServerStats.CPUStats) obj;

      if (getRecentGcuMillisecondsPerSecond() != other.getRecentGcuMillisecondsPerSecond())
        return false;
      if (getMilligcuLimit() != other.getMilligcuLimit()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RECENT_GCU_MILLISECONDS_PER_SECOND_FIELD_NUMBER;
      hash = (53 * hash) + getRecentGcuMillisecondsPerSecond();
      hash = (37 * hash) + MILLIGCU_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getMilligcuLimit();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.google.bigtable.v2.ServerStats.CPUStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Contains tabletserver stats, e.g. CPU utilization.
     * </pre>
     *
     * Protobuf type {@code google.bigtable.v2.ServerStats.CPUStats}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.bigtable.v2.ServerStats.CPUStats)
        com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.bigtable.v2.BigtableProto
            .internal_static_google_bigtable_v2_ServerStats_CPUStats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.bigtable.v2.BigtableProto
            .internal_static_google_bigtable_v2_ServerStats_CPUStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.bigtable.v2.ServerStats.CPUStats.class,
                com.google.bigtable.v2.ServerStats.CPUStats.Builder.class);
      }

      // Construct using com.google.bigtable.v2.ServerStats.CPUStats.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        recentGcuMillisecondsPerSecond_ = 0;
        milligcuLimit_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.bigtable.v2.BigtableProto
            .internal_static_google_bigtable_v2_ServerStats_CPUStats_descriptor;
      }

      @java.lang.Override
      public com.google.bigtable.v2.ServerStats.CPUStats getDefaultInstanceForType() {
        return com.google.bigtable.v2.ServerStats.CPUStats.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.bigtable.v2.ServerStats.CPUStats build() {
        com.google.bigtable.v2.ServerStats.CPUStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.bigtable.v2.ServerStats.CPUStats buildPartial() {
        com.google.bigtable.v2.ServerStats.CPUStats result =
            new com.google.bigtable.v2.ServerStats.CPUStats(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.bigtable.v2.ServerStats.CPUStats result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.recentGcuMillisecondsPerSecond_ = recentGcuMillisecondsPerSecond_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.milligcuLimit_ = milligcuLimit_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.bigtable.v2.ServerStats.CPUStats) {
          return mergeFrom((com.google.bigtable.v2.ServerStats.CPUStats) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.bigtable.v2.ServerStats.CPUStats other) {
        if (other == com.google.bigtable.v2.ServerStats.CPUStats.getDefaultInstance()) return this;
        if (other.getRecentGcuMillisecondsPerSecond() != 0) {
          setRecentGcuMillisecondsPerSecond(other.getRecentGcuMillisecondsPerSecond());
        }
        if (other.getMilligcuLimit() != 0) {
          setMilligcuLimit(other.getMilligcuLimit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  recentGcuMillisecondsPerSecond_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  milligcuLimit_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int recentGcuMillisecondsPerSecond_;
      /**
       *
       *
       * <pre>
       * This is the recent CPU utilization for one of the tabletservers that this
       * request touched, in unit of milli-GCU seconds per second. The duration of
       * the measure is determined in the server, which is usually 5 seconds.
       * </pre>
       *
       * <code>int32 recent_gcu_milliseconds_per_second = 1;</code>
       *
       * @return The recentGcuMillisecondsPerSecond.
       */
      @java.lang.Override
      public int getRecentGcuMillisecondsPerSecond() {
        return recentGcuMillisecondsPerSecond_;
      }
      /**
       *
       *
       * <pre>
       * This is the recent CPU utilization for one of the tabletservers that this
       * request touched, in unit of milli-GCU seconds per second. The duration of
       * the measure is determined in the server, which is usually 5 seconds.
       * </pre>
       *
       * <code>int32 recent_gcu_milliseconds_per_second = 1;</code>
       *
       * @param value The recentGcuMillisecondsPerSecond to set.
       * @return This builder for chaining.
       */
      public Builder setRecentGcuMillisecondsPerSecond(int value) {

        recentGcuMillisecondsPerSecond_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * This is the recent CPU utilization for one of the tabletservers that this
       * request touched, in unit of milli-GCU seconds per second. The duration of
       * the measure is determined in the server, which is usually 5 seconds.
       * </pre>
       *
       * <code>int32 recent_gcu_milliseconds_per_second = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearRecentGcuMillisecondsPerSecond() {
        bitField0_ = (bitField0_ & ~0x00000001);
        recentGcuMillisecondsPerSecond_ = 0;
        onChanged();
        return this;
      }

      private int milligcuLimit_;
      /**
       *
       *
       * <pre>
       * This is the CPU capacity of the tabletserver, measured in milli-GCU. For
       * our regular CBT nodes, it's 8000.
       * </pre>
       *
       * <code>int32 milligcu_limit = 2;</code>
       *
       * @return The milligcuLimit.
       */
      @java.lang.Override
      public int getMilligcuLimit() {
        return milligcuLimit_;
      }
      /**
       *
       *
       * <pre>
       * This is the CPU capacity of the tabletserver, measured in milli-GCU. For
       * our regular CBT nodes, it's 8000.
       * </pre>
       *
       * <code>int32 milligcu_limit = 2;</code>
       *
       * @param value The milligcuLimit to set.
       * @return This builder for chaining.
       */
      public Builder setMilligcuLimit(int value) {

        milligcuLimit_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * This is the CPU capacity of the tabletserver, measured in milli-GCU. For
       * our regular CBT nodes, it's 8000.
       * </pre>
       *
       * <code>int32 milligcu_limit = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearMilligcuLimit() {
        bitField0_ = (bitField0_ & ~0x00000002);
        milligcuLimit_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.bigtable.v2.ServerStats.CPUStats)
    }

    // @@protoc_insertion_point(class_scope:google.bigtable.v2.ServerStats.CPUStats)
    private static final com.google.bigtable.v2.ServerStats.CPUStats DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.bigtable.v2.ServerStats.CPUStats();
    }

    public static com.google.bigtable.v2.ServerStats.CPUStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CPUStats> PARSER =
        new com.google.protobuf.AbstractParser<CPUStats>() {
          @java.lang.Override
          public CPUStats parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<CPUStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CPUStats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.bigtable.v2.ServerStats.CPUStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int CPU_STATS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.bigtable.v2.ServerStats.CPUStats> cpuStats_;
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.bigtable.v2.ServerStats.CPUStats> getCpuStatsList() {
    return cpuStats_;
  }
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder>
      getCpuStatsOrBuilderList() {
    return cpuStats_;
  }
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  @java.lang.Override
  public int getCpuStatsCount() {
    return cpuStats_.size();
  }
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  @java.lang.Override
  public com.google.bigtable.v2.ServerStats.CPUStats getCpuStats(int index) {
    return cpuStats_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  @java.lang.Override
  public com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder getCpuStatsOrBuilder(int index) {
    return cpuStats_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < cpuStats_.size(); i++) {
      output.writeMessage(1, cpuStats_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < cpuStats_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, cpuStats_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.bigtable.v2.ServerStats)) {
      return super.equals(obj);
    }
    com.google.bigtable.v2.ServerStats other = (com.google.bigtable.v2.ServerStats) obj;

    if (!getCpuStatsList().equals(other.getCpuStatsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getCpuStatsCount() > 0) {
      hash = (37 * hash) + CPU_STATS_FIELD_NUMBER;
      hash = (53 * hash) + getCpuStatsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.bigtable.v2.ServerStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.bigtable.v2.ServerStats parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.bigtable.v2.ServerStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.bigtable.v2.ServerStats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * This message represent stats of the tabletservers that the request touched.
   * E.g. CPU utilization.
   * </pre>
   *
   * Protobuf type {@code google.bigtable.v2.ServerStats}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.bigtable.v2.ServerStats)
      com.google.bigtable.v2.ServerStatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.bigtable.v2.BigtableProto
          .internal_static_google_bigtable_v2_ServerStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.v2.BigtableProto
          .internal_static_google_bigtable_v2_ServerStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.v2.ServerStats.class,
              com.google.bigtable.v2.ServerStats.Builder.class);
    }

    // Construct using com.google.bigtable.v2.ServerStats.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (cpuStatsBuilder_ == null) {
        cpuStats_ = java.util.Collections.emptyList();
      } else {
        cpuStats_ = null;
        cpuStatsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.bigtable.v2.BigtableProto
          .internal_static_google_bigtable_v2_ServerStats_descriptor;
    }

    @java.lang.Override
    public com.google.bigtable.v2.ServerStats getDefaultInstanceForType() {
      return com.google.bigtable.v2.ServerStats.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.bigtable.v2.ServerStats build() {
      com.google.bigtable.v2.ServerStats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.bigtable.v2.ServerStats buildPartial() {
      com.google.bigtable.v2.ServerStats result = new com.google.bigtable.v2.ServerStats(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.bigtable.v2.ServerStats result) {
      if (cpuStatsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          cpuStats_ = java.util.Collections.unmodifiableList(cpuStats_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cpuStats_ = cpuStats_;
      } else {
        result.cpuStats_ = cpuStatsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.bigtable.v2.ServerStats result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.bigtable.v2.ServerStats) {
        return mergeFrom((com.google.bigtable.v2.ServerStats) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.bigtable.v2.ServerStats other) {
      if (other == com.google.bigtable.v2.ServerStats.getDefaultInstance()) return this;
      if (cpuStatsBuilder_ == null) {
        if (!other.cpuStats_.isEmpty()) {
          if (cpuStats_.isEmpty()) {
            cpuStats_ = other.cpuStats_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCpuStatsIsMutable();
            cpuStats_.addAll(other.cpuStats_);
          }
          onChanged();
        }
      } else {
        if (!other.cpuStats_.isEmpty()) {
          if (cpuStatsBuilder_.isEmpty()) {
            cpuStatsBuilder_.dispose();
            cpuStatsBuilder_ = null;
            cpuStats_ = other.cpuStats_;
            bitField0_ = (bitField0_ & ~0x00000001);
            cpuStatsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getCpuStatsFieldBuilder()
                    : null;
          } else {
            cpuStatsBuilder_.addAllMessages(other.cpuStats_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.bigtable.v2.ServerStats.CPUStats m =
                    input.readMessage(
                        com.google.bigtable.v2.ServerStats.CPUStats.parser(), extensionRegistry);
                if (cpuStatsBuilder_ == null) {
                  ensureCpuStatsIsMutable();
                  cpuStats_.add(m);
                } else {
                  cpuStatsBuilder_.addMessage(m);
                }
                break;
              } // case 10
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.bigtable.v2.ServerStats.CPUStats> cpuStats_ =
        java.util.Collections.emptyList();

    private void ensureCpuStatsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        cpuStats_ = new java.util.ArrayList<com.google.bigtable.v2.ServerStats.CPUStats>(cpuStats_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.bigtable.v2.ServerStats.CPUStats,
            com.google.bigtable.v2.ServerStats.CPUStats.Builder,
            com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder>
        cpuStatsBuilder_;

    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public java.util.List<com.google.bigtable.v2.ServerStats.CPUStats> getCpuStatsList() {
      if (cpuStatsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(cpuStats_);
      } else {
        return cpuStatsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public int getCpuStatsCount() {
      if (cpuStatsBuilder_ == null) {
        return cpuStats_.size();
      } else {
        return cpuStatsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public com.google.bigtable.v2.ServerStats.CPUStats getCpuStats(int index) {
      if (cpuStatsBuilder_ == null) {
        return cpuStats_.get(index);
      } else {
        return cpuStatsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder setCpuStats(int index, com.google.bigtable.v2.ServerStats.CPUStats value) {
      if (cpuStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCpuStatsIsMutable();
        cpuStats_.set(index, value);
        onChanged();
      } else {
        cpuStatsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder setCpuStats(
        int index, com.google.bigtable.v2.ServerStats.CPUStats.Builder builderForValue) {
      if (cpuStatsBuilder_ == null) {
        ensureCpuStatsIsMutable();
        cpuStats_.set(index, builderForValue.build());
        onChanged();
      } else {
        cpuStatsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder addCpuStats(com.google.bigtable.v2.ServerStats.CPUStats value) {
      if (cpuStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCpuStatsIsMutable();
        cpuStats_.add(value);
        onChanged();
      } else {
        cpuStatsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder addCpuStats(int index, com.google.bigtable.v2.ServerStats.CPUStats value) {
      if (cpuStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCpuStatsIsMutable();
        cpuStats_.add(index, value);
        onChanged();
      } else {
        cpuStatsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder addCpuStats(
        com.google.bigtable.v2.ServerStats.CPUStats.Builder builderForValue) {
      if (cpuStatsBuilder_ == null) {
        ensureCpuStatsIsMutable();
        cpuStats_.add(builderForValue.build());
        onChanged();
      } else {
        cpuStatsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder addCpuStats(
        int index, com.google.bigtable.v2.ServerStats.CPUStats.Builder builderForValue) {
      if (cpuStatsBuilder_ == null) {
        ensureCpuStatsIsMutable();
        cpuStats_.add(index, builderForValue.build());
        onChanged();
      } else {
        cpuStatsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder addAllCpuStats(
        java.lang.Iterable<? extends com.google.bigtable.v2.ServerStats.CPUStats> values) {
      if (cpuStatsBuilder_ == null) {
        ensureCpuStatsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, cpuStats_);
        onChanged();
      } else {
        cpuStatsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder clearCpuStats() {
      if (cpuStatsBuilder_ == null) {
        cpuStats_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        cpuStatsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public Builder removeCpuStats(int index) {
      if (cpuStatsBuilder_ == null) {
        ensureCpuStatsIsMutable();
        cpuStats_.remove(index);
        onChanged();
      } else {
        cpuStatsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public com.google.bigtable.v2.ServerStats.CPUStats.Builder getCpuStatsBuilder(int index) {
      return getCpuStatsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder getCpuStatsOrBuilder(int index) {
      if (cpuStatsBuilder_ == null) {
        return cpuStats_.get(index);
      } else {
        return cpuStatsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public java.util.List<? extends com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder>
        getCpuStatsOrBuilderList() {
      if (cpuStatsBuilder_ != null) {
        return cpuStatsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(cpuStats_);
      }
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public com.google.bigtable.v2.ServerStats.CPUStats.Builder addCpuStatsBuilder() {
      return getCpuStatsFieldBuilder()
          .addBuilder(com.google.bigtable.v2.ServerStats.CPUStats.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public com.google.bigtable.v2.ServerStats.CPUStats.Builder addCpuStatsBuilder(int index) {
      return getCpuStatsFieldBuilder()
          .addBuilder(index, com.google.bigtable.v2.ServerStats.CPUStats.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
     * be sent to the same tabletserver and we don't de-duplicate. We only get the
     * stats if the RPC returns OK.
     * </pre>
     *
     * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
     */
    public java.util.List<com.google.bigtable.v2.ServerStats.CPUStats.Builder>
        getCpuStatsBuilderList() {
      return getCpuStatsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.bigtable.v2.ServerStats.CPUStats,
            com.google.bigtable.v2.ServerStats.CPUStats.Builder,
            com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder>
        getCpuStatsFieldBuilder() {
      if (cpuStatsBuilder_ == null) {
        cpuStatsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.bigtable.v2.ServerStats.CPUStats,
                com.google.bigtable.v2.ServerStats.CPUStats.Builder,
                com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder>(
                cpuStats_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        cpuStats_ = null;
      }
      return cpuStatsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.bigtable.v2.ServerStats)
  }

  // @@protoc_insertion_point(class_scope:google.bigtable.v2.ServerStats)
  private static final com.google.bigtable.v2.ServerStats DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.bigtable.v2.ServerStats();
  }

  public static com.google.bigtable.v2.ServerStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ServerStats> PARSER =
      new com.google.protobuf.AbstractParser<ServerStats>() {
        @java.lang.Override
        public ServerStats parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ServerStats> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ServerStats> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.bigtable.v2.ServerStats getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
