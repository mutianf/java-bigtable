/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v2/bigtable.proto

package com.google.bigtable.v2;

public interface ServerStatsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.bigtable.v2.ServerStats)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  java.util.List<com.google.bigtable.v2.ServerStats.CPUStats> getCpuStatsList();
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  com.google.bigtable.v2.ServerStats.CPUStats getCpuStats(int index);
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  int getCpuStatsCount();
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  java.util.List<? extends com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder>
      getCpuStatsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Currently we have 1 entry per underlying RPC. Note that multiple RPCs may
   * be sent to the same tabletserver and we don't de-duplicate. We only get the
   * stats if the RPC returns OK.
   * </pre>
   *
   * <code>repeated .google.bigtable.v2.ServerStats.CPUStats cpu_stats = 1;</code>
   */
  com.google.bigtable.v2.ServerStats.CPUStatsOrBuilder getCpuStatsOrBuilder(int index);
}
